#!/usr/bin/env python3
"""
This is part of a seminar I'm taking about random numbers.

Performs the spectral test on a random number sequence that is generated by a
linear congruential generator with the parameters given in the input file.

"""
import sys
import argparse

from util.logging.logger import CoreLog as cl
from util.opt.greet import ngreeting

def parse_arguments():
    """
    Parse the command line arguments.

    """
    parser = argparse.ArgumentParser(
        description=__doc__,
        formatter_class=argparse.RawDescriptionHelpFormatter
    )
    parser.add_argument("-l", "--log", help="set logging level",
                        choices=["quiet", "debug", "verbose", "info",
                                 "warning", "error", "critical"],
                        default="info")

    parser.add_argument("-i", "--input", help="input file generated by lcong",
                        required=True)

    parser.add_argument("-j", help="number of parallel processes in runs test",
                        type=int, default=4)

    args = parser.parse_args()
    return args

def setup_loggers(logging_level):
    """
    Setup the logging level.

    """
    cl(logging_level)
    cl.verbose("starting logging")
    cl.verbose("logging level is set to {}".format(logging_level))
    if logging_level == "verbose" or logging_level == "debug":
        print()                 # newline

def greet():
    """
    Print a greeting.

    """
    print(ngreeting())

def main():
    """
    Main entry point.

    """
    args = parse_arguments()

    greet()

    logging_level = args.log
    setup_loggers(logging_level)


    cl.verbose("Using {} processes in parallel".format(args.j))


if __name__ == "__main__":
    main()
